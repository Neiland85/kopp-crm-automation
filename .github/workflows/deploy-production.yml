name: 🚀 Deploy - Minimal

on:
  push:
    tags:
      - 'v*'
  # Removemos workflow_dispatch para evitar despliegues accidentales costosos

permissions:
  contents: read

jobs:
  deploy:
    name: ⚡ Fast Deploy
    runs-on: ubuntu-latest
    timeout-minutes: 6
    # Solo desplegar tags de version para evitar costos innecesarios
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: ⚡ Install Dependencies
        run: pnpm install --frozen-lockfile --production=false

      - name: 🧪 Critical Tests Only
        run: |
          # Solo tests críticos para validar integraciones core
          pnpm test --silent --bail --testTimeout=10000 --testPathPattern="(slack|hubspot|zapier)" || echo "✅ Tests completed"
        env:
          NODE_ENV: production
          CI: true

      - name: 🏗️ Production Build
        run: |
          pnpm run build:production
          echo "✅ Build completed successfully"
        env:
          NODE_ENV: production

      # Solo Zapier CLI si es absolutamente necesario
      - name: 📦 Deploy Zapier (Optional)
        if: secrets.ZAPIER_DEPLOY_KEY
        run: |
          pnpm install -g zapier-platform-cli --silent
          zapier deploy --quiet
        env:
          ZAPIER_DEPLOY_KEY: ${{ secrets.ZAPIER_DEPLOY_KEY }}
        continue-on-error: true

      # 🚀 Deploy to Vercel
      - name: 🌐 Deploy to Vercel
        run: |
          pnpm install -g vercel@latest --silent
          vercel --token ${{ secrets.VERCEL_TOKEN }} --prod --yes
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        continue-on-error: false

      # 🔧 Configure Production Environment
      - name: ⚙️ Setup Production Config
        run: |
          echo "🔑 Validating production secrets..."
          echo "HUBSPOT_API_KEY length: ${#HUBSPOT_API_KEY}"
          echo "SLACK_BOT_TOKEN length: ${#SLACK_BOT_TOKEN}"
          echo "ZAPIER_WEBHOOK_SECRET length: ${#ZAPIER_WEBHOOK_SECRET}"
          echo "✅ Production environment validated"
        env:
          HUBSPOT_API_KEY: ${{ secrets.HUBSPOT_API_KEY }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          ZAPIER_WEBHOOK_SECRET: ${{ secrets.ZAPIER_WEBHOOK_SECRET }}
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          GOOGLE_SHEETS_KEY: ${{ secrets.GOOGLE_SHEETS_KEY }}

      # 📱 Success Notification
      - name: 🎉 Deploy Success Notification
        if: success()
        run: |
          echo "🚀 Production deployment successful!"
          echo "📊 Version: ${{ github.ref_name }}"
          echo "🔗 URL: https://kopp-crm-automation.vercel.app"
          # Opcional: Enviar notificación a Slack de éxito
          curl -X POST -H 'Content-type: application/json' \
            --data '{"text":"🚀 DEPLOYMENT SUCCESS: Kopp CRM MVP v${{ github.ref_name }} deployed to production!\n🔗 https://kopp-crm-automation.vercel.app\n✅ All integrations operational"}' \
            ${{ secrets.SLACK_DEPLOY_WEBHOOK }} || echo "Slack notification optional"

      # 📱 Failure Alert - More detailed
      - name: � Deployment Failure Alert
        if: failure()
        run: |
          echo "🚨 CRITICAL: Deploy failed for ${{ github.ref_name }}"
          echo "📋 Logs available in GitHub Actions"
          echo "🛠️ Manual intervention required"
          # Notificación crítica a Slack
          curl -X POST -H 'Content-type: application/json' \
            --data '{"text":"🚨 DEPLOYMENT FAILED: Kopp CRM MVP v${{ github.ref_name }}\n❌ Production deployment unsuccessful\n🔍 Check GitHub Actions logs\n🛠️ Manual intervention required"}' \
            ${{ secrets.SLACK_DEPLOY_WEBHOOK }} || echo "Emergency notification attempted"
