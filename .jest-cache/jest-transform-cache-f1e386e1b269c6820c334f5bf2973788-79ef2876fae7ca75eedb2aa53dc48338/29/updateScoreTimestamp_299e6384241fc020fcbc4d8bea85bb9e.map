{"file":"/Users/estudio/Projects/GitHub/MICROSERVICIOS/kopp-stadium-crm_slack-hubspot-zappier-notion/kopp-crm-automation/src/zapier/creates/updateScoreTimestamp.ts","mappings":"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","names":[],"sources":["/Users/estudio/Projects/GitHub/MICROSERVICIOS/kopp-stadium-crm_slack-hubspot-zappier-notion/kopp-crm-automation/src/zapier/creates/updateScoreTimestamp.ts"],"sourcesContent":["import { ZapierCreate, ZapierZ, ZapierBundle } from '../types';\nimport { withRetry, logZapAction } from '../utils/common';\n\n/**\n * Interface para la respuesta de actualización de score\n */\ninterface ScoreUpdateResponse {\n  contact_id: string;\n  email: string;\n  lead_score: number;\n  last_score_update: string;\n  updated_properties: string[];\n}\n\n/**\n * Actualiza el timestamp de last_score_update en HubSpot\n */\nconst updateScoreTimestamp = async (\n  z: ZapierZ,\n  bundle: ZapierBundle\n): Promise<ScoreUpdateResponse> => {\n  const apiKey = bundle.authData.hubspot_api_key;\n  const input = bundle.inputData;\n\n  const contactId = input.contact_id || input.id;\n  const currentTimestamp = new Date().toISOString();\n\n  if (!contactId) {\n    throw new Error('Contact ID is required');\n  }\n\n  // Preparar propiedades a actualizar\n  const properties: Record<string, any> = {\n    last_score_update: currentTimestamp,\n  };\n\n  // Si se proporciona un nuevo lead_score, también actualizarlo\n  if (input.lead_score !== undefined && input.lead_score !== null) {\n    properties.lead_score = input.lead_score.toString();\n  }\n\n  const updateUrl = `https://api.hubapi.com/crm/v3/objects/contacts/${contactId}`;\n  const updateRequest = {\n    url: updateUrl,\n    method: 'PATCH' as const,\n    headers: {\n      Authorization: `Bearer ${apiKey}`,\n      'Content-Type': 'application/json',\n    },\n    json: {\n      properties,\n    },\n  };\n\n  try {\n    const response = await withRetry(() => z.request(updateRequest), 3);\n    const contact = response.data;\n\n    const result: ScoreUpdateResponse = {\n      contact_id: contact.id,\n      email: contact.properties.email || input.email || '',\n      lead_score:\n        parseInt(contact.properties.lead_score) || input.lead_score || 0,\n      last_score_update:\n        contact.properties.last_score_update || currentTimestamp,\n      updated_properties: Object.keys(properties),\n    };\n\n    // Log de la acción exitosa\n    await logZapAction(z, {\n      action: 'update_score_timestamp',\n      timestamp: new Date().toISOString(),\n      success: true,\n      data: {\n        contact_id: contactId,\n        email: result.email,\n        lead_score: result.lead_score,\n        updated_properties: result.updated_properties,\n        timestamp_set: currentTimestamp,\n      },\n    });\n\n    return result;\n  } catch (error: any) {\n    // Log del error\n    await logZapAction(z, {\n      action: 'update_score_timestamp',\n      timestamp: new Date().toISOString(),\n      success: false,\n      error: error.message || 'Unknown error',\n      data: {\n        contact_id: contactId,\n        email: input.email,\n        lead_score: input.lead_score,\n        properties_attempted: Object.keys(properties),\n      },\n    });\n\n    z.console.error('Error updating score timestamp:', error);\n    throw error;\n  }\n};\n\n/**\n * Configuración del create action para actualizar timestamp de score\n */\nconst create: ZapierCreate = {\n  key: 'update_score_timestamp',\n  noun: 'Score Timestamp',\n  display: {\n    label: 'Update Score Timestamp in HubSpot',\n    description:\n      'Updates the last_score_update property with current timestamp',\n    important: true,\n  },\n  operation: {\n    perform: updateScoreTimestamp,\n    inputFields: [\n      {\n        key: 'contact_id',\n        label: 'Contact ID',\n        type: 'string',\n        required: true,\n        helpText: 'The HubSpot contact ID to update',\n      },\n      {\n        key: 'email',\n        label: 'Email',\n        type: 'string',\n        required: false,\n        helpText: 'Contact email for logging purposes',\n      },\n      {\n        key: 'lead_score',\n        label: 'Lead Score',\n        type: 'integer',\n        required: false,\n        helpText: 'The current lead score (optional, for logging)',\n      },\n    ],\n    sample: {\n      contact_id: 'contact-123456',\n      email: 'john.doe@example.com',\n      lead_score: 75,\n      last_score_update: '2024-01-15T10:30:00Z',\n      updated_properties: ['last_score_update'],\n    },\n    outputFields: [\n      { key: 'contact_id', label: 'Contact ID', type: 'string' },\n      { key: 'email', label: 'Email', type: 'string' },\n      { key: 'lead_score', label: 'Lead Score', type: 'integer' },\n      {\n        key: 'last_score_update',\n        label: 'Last Score Update',\n        type: 'datetime',\n      },\n      {\n        key: 'updated_properties',\n        label: 'Updated Properties',\n        type: 'string',\n      },\n    ],\n  },\n};\n\nexport default create;\n"],"version":3}