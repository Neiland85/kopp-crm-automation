{"file":"/Users/estudio/Projects/GitHub/MICROSERVICIOS/kopp-stadium-crm_slack-hubspot-zappier-notion/kopp-crm-automation/tests/zapier.test.ts","mappings":"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","names":[],"sources":["/Users/estudio/Projects/GitHub/MICROSERVICIOS/kopp-stadium-crm_slack-hubspot-zappier-notion/kopp-crm-automation/tests/zapier.test.ts"],"sourcesContent":["import App from '../src/zapier/index';\nimport {\n  withRetry,\n  logZapAction,\n  mapFormFieldsToHubSpot,\n  isValidEmail,\n} from '../src/zapier/utils/common';\n\n// Mock del logger\njest.mock('fs/promises');\n\ndescribe('Form Submission Trigger', () => {\n  test('should have correct trigger configuration', () => {\n    const trigger = App.triggers.new_form_submission;\n\n    expect(trigger).toBeDefined();\n    expect(trigger.key).toBe('new_form_submission');\n    expect(trigger.noun).toBe('Form Submission');\n    expect(trigger.display.label).toBe('New Form Submission');\n    expect(trigger.operation.type).toBe('polling');\n    expect(typeof trigger.operation.perform).toBe('function');\n  });\n\n  test('should have correct output fields', () => {\n    const trigger = App.triggers.new_form_submission;\n    const outputFields = trigger.operation.outputFields;\n\n    expect(outputFields).toBeDefined();\n    expect(Array.isArray(outputFields)).toBe(true);\n\n    const fieldKeys = outputFields?.map((field) => field.key) || [];\n    expect(fieldKeys).toContain('id');\n    expect(fieldKeys).toContain('contact_email');\n    expect(fieldKeys).toContain('submitted_at');\n    expect(fieldKeys).toContain('form_id');\n  });\n\n  test('should have sample data', () => {\n    const trigger = App.triggers.new_form_submission;\n\n    expect(trigger.operation.sample).toBeDefined();\n    expect(trigger.operation.sample).toHaveProperty('id');\n    expect(trigger.operation.sample).toHaveProperty('contact_email');\n    expect(trigger.operation.sample).toHaveProperty('submitted_at');\n  });\n});\n\ndescribe('Page View Trigger', () => {\n  test('should have correct trigger configuration', () => {\n    const trigger = App.triggers.new_page_view;\n\n    expect(trigger).toBeDefined();\n    expect(trigger.key).toBe('new_page_view');\n    expect(trigger.noun).toBe('Page View');\n    expect(trigger.display.label).toBe('New Page View');\n    expect(trigger.operation.type).toBe('polling');\n    expect(typeof trigger.operation.perform).toBe('function');\n  });\n\n  test('should have correct output fields', () => {\n    const trigger = App.triggers.new_page_view;\n    const outputFields = trigger.operation.outputFields;\n\n    expect(outputFields).toBeDefined();\n    expect(Array.isArray(outputFields)).toBe(true);\n\n    const fieldKeys = outputFields?.map((field) => field.key) || [];\n    expect(fieldKeys).toContain('id');\n    expect(fieldKeys).toContain('page_url');\n    expect(fieldKeys).toContain('timestamp');\n  });\n});\n\ndescribe('HubSpot Contact Create Action', () => {\n  test('should have correct create configuration', () => {\n    const create = App.creates.hubspot_contact;\n\n    expect(create).toBeDefined();\n    expect(create.key).toBe('hubspot_contact');\n    expect(create.noun).toBe('Contact');\n    expect(create.display.label).toBe('Create or Update HubSpot Contact');\n    expect(typeof create.operation.perform).toBe('function');\n  });\n\n  test('should have required input fields', () => {\n    const create = App.creates.hubspot_contact;\n    const inputFields = create.operation.inputFields;\n\n    expect(inputFields).toBeDefined();\n    expect(Array.isArray(inputFields)).toBe(true);\n\n    const emailField = inputFields.find((field) => field.key === 'email');\n    expect(emailField).toBeDefined();\n    expect(emailField?.required).toBe(true);\n\n    const fieldKeys = inputFields.map((field) => field.key);\n    expect(fieldKeys).toContain('email');\n    expect(fieldKeys).toContain('firstname');\n    expect(fieldKeys).toContain('lastname');\n    expect(fieldKeys).toContain('form_name');\n    expect(fieldKeys).toContain('submitted_at');\n  });\n\n  test('should have sample output', () => {\n    const create = App.creates.hubspot_contact;\n\n    expect(create.operation.sample).toBeDefined();\n    expect(create.operation.sample).toHaveProperty('email');\n    expect(create.operation.sample).toHaveProperty('firstname');\n    expect(create.operation.sample).toHaveProperty('lastname');\n  });\n});\n\ndescribe('Slack Notification Create Action', () => {\n  test('should have correct create configuration', () => {\n    const create = App.creates.slack_notification;\n\n    expect(create).toBeDefined();\n    expect(create.key).toBe('slack_notification');\n    expect(create.noun).toBe('Slack Message');\n    expect(create.display.label).toBe('Send Slack Notification');\n    expect(typeof create.operation.perform).toBe('function');\n  });\n\n  test('should have required input fields', () => {\n    const create = App.creates.slack_notification;\n    const inputFields = create.operation.inputFields;\n\n    expect(inputFields).toBeDefined();\n    expect(Array.isArray(inputFields)).toBe(true);\n\n    const emailField = inputFields.find((field) => field.key === 'email');\n    expect(emailField).toBeDefined();\n    expect(emailField?.required).toBe(true);\n\n    const fieldKeys = inputFields.map((field) => field.key);\n    expect(fieldKeys).toContain('email');\n    expect(fieldKeys).toContain('form_name');\n    expect(fieldKeys).toContain('submitted_at');\n  });\n\n  test('should have sample output with Block Kit format', () => {\n    const create = App.creates.slack_notification;\n\n    expect(create.operation.sample).toBeDefined();\n    expect(create.operation.sample).toHaveProperty('blocks');\n    expect(Array.isArray(create.operation.sample.blocks)).toBe(true);\n\n    const firstBlock = create.operation.sample.blocks[0];\n    expect(firstBlock).toHaveProperty('type', 'section');\n    expect(firstBlock).toHaveProperty('text');\n    expect(firstBlock.text).toHaveProperty('type', 'mrkdwn');\n    expect(firstBlock.text.text).toContain('📩 *Nuevo Form Submission*');\n  });\n});\n\ndescribe('App Authentication', () => {\n  test('should have custom authentication configuration', () => {\n    expect(App.authentication).toBeDefined();\n    expect(App.authentication.type).toBe('custom');\n    expect(App.authentication.fields).toBeDefined();\n    expect(Array.isArray(App.authentication.fields)).toBe(true);\n\n    const fieldKeys = App.authentication.fields.map((field) => field.key);\n    expect(fieldKeys).toContain('hubspot_api_key');\n    expect(fieldKeys).toContain('slack_webhook_url');\n  });\n\n  test('should have authentication test endpoint', () => {\n    expect(App.authentication.test).toBeDefined();\n    expect(App.authentication.test.url).toContain('hubapi.com');\n    expect(App.authentication.test.method).toBe('GET');\n  });\n});\n\ndescribe('App Middleware', () => {\n  test('should have beforeRequest middleware', () => {\n    expect(App.beforeRequest).toBeDefined();\n    expect(Array.isArray(App.beforeRequest)).toBe(true);\n    expect(App.beforeRequest.length).toBeGreaterThan(0);\n    expect(typeof App.beforeRequest[0]).toBe('function');\n  });\n\n  test('should have afterResponse middleware', () => {\n    expect(App.afterResponse).toBeDefined();\n    expect(Array.isArray(App.afterResponse)).toBe(true);\n    expect(App.afterResponse.length).toBeGreaterThan(0);\n    expect(typeof App.afterResponse[0]).toBe('function');\n  });\n});\n\ndescribe('Utility Functions', () => {\n  test('withRetry should handle failures and retries', async () => {\n    let attempts = 0;\n    const flakyOperation = jest.fn(async () => {\n      attempts++;\n      if (attempts < 3) {\n        throw new Error('Temporary failure');\n      }\n      return 'success';\n    });\n\n    const result = await withRetry(flakyOperation, 3, 10);\n\n    expect(result).toBe('success');\n    expect(attempts).toBe(3);\n    expect(flakyOperation).toHaveBeenCalledTimes(3);\n  });\n\n  test('withRetry should fail after max retries', async () => {\n    const alwaysFailOperation = jest.fn(async () => {\n      throw new Error('Always fails');\n    });\n\n    await expect(withRetry(alwaysFailOperation, 2, 10)).rejects.toThrow(\n      'Always fails'\n    );\n\n    expect(alwaysFailOperation).toHaveBeenCalledTimes(3); // initial + 2 retries\n  });\n\n  test('mapFormFieldsToHubSpot should map form fields correctly', () => {\n    const formValues = [\n      { name: 'email', value: 'test@example.com' },\n      { name: 'first_name', value: 'John' },\n      { name: 'last_name', value: 'Doe' },\n      { name: 'phone', value: '+1-234-567-8900' },\n      { name: 'company', value: 'Test Corp' },\n    ];\n\n    const mapped = mapFormFieldsToHubSpot(formValues);\n\n    expect(mapped).toHaveProperty('email', 'test@example.com');\n    expect(mapped).toHaveProperty('firstname', 'John');\n    expect(mapped).toHaveProperty('lastname', 'Doe');\n    expect(mapped).toHaveProperty('phone', '+12345678900');\n    expect(mapped).toHaveProperty('company', 'Test Corp');\n  });\n\n  test('mapFormFieldsToHubSpot should skip invalid emails', () => {\n    const formValues = [\n      { name: 'email', value: 'invalid-email' },\n      { name: 'firstname', value: 'John' },\n    ];\n\n    const mapped = mapFormFieldsToHubSpot(formValues);\n\n    expect(mapped).not.toHaveProperty('email');\n    expect(mapped).toHaveProperty('firstname', 'John');\n  });\n\n  test('isValidEmail should validate email addresses correctly', () => {\n    expect(isValidEmail('test@example.com')).toBe(true);\n    expect(isValidEmail('user.name+tag@example.co.uk')).toBe(true);\n    expect(isValidEmail('invalid-email')).toBe(false);\n    expect(isValidEmail('')).toBe(false);\n    expect(isValidEmail('test@')).toBe(false);\n    expect(isValidEmail('@example.com')).toBe(false);\n    expect(isValidEmail('test..test@example.com')).toBe(false);\n  });\n\n  test('logZapAction should handle logging gracefully', async () => {\n    const mockZ = {\n      console: {\n        log: jest.fn(),\n        error: jest.fn(),\n      },\n    };\n\n    // Should not throw even if logging fails\n    await expect(\n      logZapAction(mockZ, {\n        action: 'test_action',\n        timestamp: new Date().toISOString(),\n        success: true,\n        data: { test: 'data' },\n      })\n    ).resolves.not.toThrow();\n\n    expect(mockZ.console.log).toHaveBeenCalled();\n  });\n});\n"],"version":3}