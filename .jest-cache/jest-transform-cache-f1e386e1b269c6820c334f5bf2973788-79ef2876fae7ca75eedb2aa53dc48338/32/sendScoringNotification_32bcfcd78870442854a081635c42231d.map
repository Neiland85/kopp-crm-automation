{"file":"/Users/estudio/Projects/GitHub/MICROSERVICIOS/kopp-stadium-crm_slack-hubspot-zappier-notion/kopp-crm-automation/src/zapier/creates/sendScoringNotification.ts","mappings":"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","names":[],"sources":["/Users/estudio/Projects/GitHub/MICROSERVICIOS/kopp-stadium-crm_slack-hubspot-zappier-notion/kopp-crm-automation/src/zapier/creates/sendScoringNotification.ts"],"sourcesContent":["import { SlackMessage, ZapierCreate, ZapierZ, ZapierBundle } from '../types';\nimport { withRetry, logZapAction } from '../utils/common';\n\n/**\n * EnvÃ­a notificaciÃ³n de lead scoring a Slack #scoring-leads\n */\nconst sendScoringNotification = async (\n  z: ZapierZ,\n  bundle: ZapierBundle\n): Promise<SlackMessage> => {\n  const webhookUrl = bundle.authData.slack_webhook_url;\n  const input = bundle.inputData;\n\n  const leadScore = parseInt(input.lead_score) || 0;\n  const email = input.email || 'Sin email';\n  const fullName =\n    [input.firstname, input.lastname].filter(Boolean).join(' ') || 'Sin nombre';\n\n  // Solo enviar notificaciÃ³n si lead_score >= 50\n  if (leadScore < 50) {\n    await logZapAction(z, {\n      action: 'send_scoring_notification',\n      timestamp: new Date().toISOString(),\n      success: true,\n      data: {\n        email,\n        lead_score: leadScore,\n        action_taken: 'skipped_low_score',\n        threshold: 50,\n      },\n    });\n\n    return {\n      blocks: [],\n      username: 'Zapier Integration',\n      icon_emoji: ':zap:',\n      channel: '#scoring-leads',\n      skipped: true,\n      reason: `Lead score ${leadScore} is below threshold of 50`,\n    } as SlackMessage & { skipped: boolean; reason: string };\n  }\n\n  // Crear el mensaje de scoring con formato especificado\n  const slackMessage: SlackMessage = {\n    blocks: [\n      {\n        type: 'section',\n        text: {\n          type: 'mrkdwn',\n          text: 'ðŸ“ˆ *Lead Score Actualizado*',\n        },\n      },\n      {\n        type: 'section',\n        fields: [\n          {\n            type: 'mrkdwn',\n            text: `*Usuario:* ${email}`,\n          },\n          {\n            type: 'mrkdwn',\n            text: `*Score:* ${leadScore}`,\n          },\n        ],\n      },\n    ],\n    username: 'Lead Scoring Bot',\n    icon_emoji: ':chart_with_upwards_trend:',\n    channel: '#scoring-leads',\n  };\n\n  // Agregar informaciÃ³n adicional si estÃ¡ disponible\n  if (fullName !== 'Sin nombre') {\n    slackMessage.blocks[1].fields?.push({\n      type: 'mrkdwn',\n      text: `*Nombre:* ${fullName}`,\n    });\n  }\n\n  if (input.company) {\n    slackMessage.blocks[1].fields?.push({\n      type: 'mrkdwn',\n      text: `*Empresa:* ${input.company}`,\n    });\n  }\n\n  if (input.phone) {\n    slackMessage.blocks[1].fields?.push({\n      type: 'mrkdwn',\n      text: `*TelÃ©fono:* ${input.phone}`,\n    });\n  }\n\n  if (input.last_score_update) {\n    const updateDate = new Date(input.last_score_update).toLocaleString(\n      'es-ES'\n    );\n    slackMessage.blocks[1].fields?.push({\n      type: 'mrkdwn',\n      text: `*Ãšltima actualizaciÃ³n:* ${updateDate}`,\n    });\n  }\n\n  // Agregar divider y acciones\n  slackMessage.blocks.push({\n    type: 'divider',\n  } as any);\n\n  // Determinar el color y mensaje segÃºn el score\n  let scoreLevel = '';\n  let actionColor = 'primary';\n\n  if (leadScore >= 80) {\n    scoreLevel = 'ðŸ”¥ *HOT LEAD*';\n    actionColor = 'danger';\n  } else if (leadScore >= 70) {\n    scoreLevel = 'âš¡ *WARM LEAD*';\n    actionColor = 'primary';\n  } else if (leadScore >= 50) {\n    scoreLevel = 'ðŸ‘€ *QUALIFIED LEAD*';\n    actionColor = 'primary';\n  }\n\n  if (scoreLevel) {\n    slackMessage.blocks.push({\n      type: 'section',\n      text: {\n        type: 'mrkdwn',\n        text: scoreLevel,\n      },\n    });\n  }\n\n  // Agregar botÃ³n de acciÃ³n para ver en HubSpot\n  if (input.contact_id || email) {\n    const hubspotUrl = input.contact_id\n      ? `https://app.hubspot.com/contacts/contacts/${input.contact_id}`\n      : `https://app.hubspot.com/contacts/search?term=${encodeURIComponent(email)}`;\n\n    slackMessage.blocks.push({\n      type: 'actions',\n      elements: [\n        {\n          type: 'button',\n          text: {\n            type: 'plain_text',\n            text: 'Ver en HubSpot',\n            emoji: true,\n          },\n          style: actionColor,\n          url: hubspotUrl,\n        },\n      ],\n    } as any);\n  }\n\n  const request = {\n    url: webhookUrl,\n    method: 'POST' as const,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    json: slackMessage,\n  };\n\n  try {\n    const response = await withRetry(() => z.request(request), 3);\n\n    // Log de la acciÃ³n exitosa\n    await logZapAction(z, {\n      action: 'send_scoring_notification',\n      timestamp: new Date().toISOString(),\n      success: true,\n      data: {\n        email,\n        lead_score: leadScore,\n        score_level: scoreLevel,\n        channel: '#scoring-leads',\n        blocks_count: slackMessage.blocks.length,\n        contact_id: input.contact_id,\n      },\n    });\n\n    // Verificar que el mensaje se enviÃ³ correctamente\n    if (response.status >= 200 && response.status < 300) {\n      return slackMessage;\n    } else {\n      throw new Error(\n        `Slack API returned status ${response.status}: ${response.content}`\n      );\n    }\n  } catch (error: any) {\n    // Log del error\n    await logZapAction(z, {\n      action: 'send_scoring_notification',\n      timestamp: new Date().toISOString(),\n      success: false,\n      error: error.message || 'Unknown error',\n      data: {\n        email,\n        lead_score: leadScore,\n        webhook_url: webhookUrl.replace(/\\/[^/]*$/, '/***'),\n      },\n    });\n\n    z.console.error('Error sending scoring notification:', error);\n    throw error;\n  }\n};\n\n/**\n * ConfiguraciÃ³n del create action para notificaciones de scoring\n */\nconst create: ZapierCreate = {\n  key: 'send_scoring_notification',\n  noun: 'Scoring Notification',\n  display: {\n    label: 'Send Lead Scoring Notification to Slack',\n    description: 'Sends a notification to #scoring-leads when lead score >= 50',\n    important: true,\n  },\n  operation: {\n    perform: sendScoringNotification,\n    inputFields: [\n      {\n        key: 'email',\n        label: 'Email',\n        type: 'string',\n        required: true,\n        helpText: 'The email address of the contact',\n      },\n      {\n        key: 'lead_score',\n        label: 'Lead Score',\n        type: 'integer',\n        required: true,\n        helpText: 'The updated lead score (must be >= 50 to send notification)',\n      },\n      {\n        key: 'firstname',\n        label: 'First Name',\n        type: 'string',\n        required: false,\n        helpText: 'The first name of the contact',\n      },\n      {\n        key: 'lastname',\n        label: 'Last Name',\n        type: 'string',\n        required: false,\n        helpText: 'The last name of the contact',\n      },\n      {\n        key: 'company',\n        label: 'Company',\n        type: 'string',\n        required: false,\n        helpText: 'The company name of the contact',\n      },\n      {\n        key: 'phone',\n        label: 'Phone',\n        type: 'string',\n        required: false,\n        helpText: 'The phone number of the contact',\n      },\n      {\n        key: 'contact_id',\n        label: 'Contact ID',\n        type: 'string',\n        required: false,\n        helpText: 'The HubSpot contact ID for direct linking',\n      },\n      {\n        key: 'last_score_update',\n        label: 'Last Score Update',\n        type: 'datetime',\n        required: false,\n        helpText: 'When the score was last updated',\n      },\n    ],\n    sample: {\n      blocks: [\n        {\n          type: 'section',\n          text: {\n            type: 'mrkdwn',\n            text: 'ðŸ“ˆ *Lead Score Actualizado*',\n          },\n        },\n        {\n          type: 'section',\n          fields: [\n            {\n              type: 'mrkdwn',\n              text: '*Usuario:* john.doe@example.com',\n            },\n            {\n              type: 'mrkdwn',\n              text: '*Score:* 75',\n            },\n          ],\n        },\n      ],\n      username: 'Lead Scoring Bot',\n      icon_emoji: ':chart_with_upwards_trend:',\n      channel: '#scoring-leads',\n    },\n    outputFields: [\n      { key: 'blocks', label: 'Slack Blocks', type: 'text' },\n      { key: 'username', label: 'Username', type: 'string' },\n      { key: 'icon_emoji', label: 'Icon Emoji', type: 'string' },\n      { key: 'channel', label: 'Channel', type: 'string' },\n    ],\n  },\n};\n\nexport default create;\n"],"version":3}