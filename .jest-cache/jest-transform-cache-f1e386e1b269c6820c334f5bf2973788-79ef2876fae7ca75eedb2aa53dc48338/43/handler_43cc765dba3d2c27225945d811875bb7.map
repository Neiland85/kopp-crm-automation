{"file":"/Users/estudio/Projects/GitHub/MICROSERVICIOS/kopp-stadium-crm_slack-hubspot-zappier-notion/kopp-crm-automation/src/zaps/dropout-positivo/handler.ts","mappings":"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","names":[],"sources":["/Users/estudio/Projects/GitHub/MICROSERVICIOS/kopp-stadium-crm_slack-hubspot-zappier-notion/kopp-crm-automation/src/zaps/dropout-positivo/handler.ts"],"sourcesContent":["/**\n * 💫 Dropout Positivo Handler\n *\n * Lógica principal para procesar contacts con engagement bajo\n * y aplicar boost de reactivación.\n */\n\nimport axios from 'axios';\nimport { Logger } from '../../utils/Logger';\n\nconst logger = new Logger('dropout-positivo');\n\nexport interface DropoutPositivoConfig {\n  contactId: string;\n  email: string;\n  lastEngagementDate?: string;\n  hubspotApiKey: string;\n  slackBotToken: string;\n  slackChannel: string;\n  scoreBoost?: number;\n  thresholdDays?: number;\n}\n\nexport interface DropoutPositivoResult {\n  id: string;\n  contactId: string;\n  email: string;\n  lastEngagementDate?: string;\n  daysSinceEngagement: number;\n  previousScore: number;\n  newScore: number;\n  slackMessageId: string;\n  processedAt: string;\n  success: boolean;\n}\n\n/**\n * Handler principal para el procesamiento de Dropout Positivo\n */\nexport const dropoutPositivoHandler = async (\n  config: DropoutPositivoConfig\n): Promise<DropoutPositivoResult> => {\n  const executionId = `dropout-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n  const scoreBoost = config.scoreBoost || 30;\n  const thresholdDays = config.thresholdDays || 7;\n\n  logger.info('💫 Iniciando procesamiento Dropout Positivo', {\n    id: executionId,\n    contactId: config.contactId,\n    email: config.email,\n    scoreBoost,\n    thresholdDays,\n  });\n\n  try {\n    // 1. Obtener información actual del contact\n    const contactInfo = await getHubSpotContact(\n      config.contactId,\n      config.hubspotApiKey\n    );\n\n    const currentScore = parseInt(contactInfo.lead_influence_score || '0');\n    const lastEngagement =\n      config.lastEngagementDate || contactInfo.last_engagement_date;\n    const daysSinceEngagement = calculateDaysSinceEngagement(lastEngagement);\n\n    logger.info('📊 Información del contact', {\n      contactId: config.contactId,\n      currentScore,\n      lastEngagement,\n      daysSinceEngagement,\n    });\n\n    // 2. Verificar si cumple con el threshold\n    if (daysSinceEngagement < thresholdDays) {\n      logger.info('⏭️ Contact no cumple threshold, saltando procesamiento', {\n        daysSinceEngagement,\n        thresholdDays,\n      });\n\n      return {\n        id: executionId,\n        contactId: config.contactId,\n        email: config.email,\n        lastEngagementDate: lastEngagement,\n        daysSinceEngagement,\n        previousScore: currentScore,\n        newScore: currentScore,\n        slackMessageId: '',\n        processedAt: new Date().toISOString(),\n        success: false,\n      };\n    }\n\n    // 3. Aplicar boost de score en HubSpot\n    const newScore = currentScore + scoreBoost;\n    await updateHubSpotContactScore(\n      config.contactId,\n      newScore,\n      config.hubspotApiKey\n    );\n\n    logger.info('🔄 Score actualizado en HubSpot', {\n      contactId: config.contactId,\n      previousScore: currentScore,\n      newScore,\n      boost: scoreBoost,\n    });\n\n    // 4. Enviar mensaje a Slack\n    const slackMessageId = await sendDropoutSlackMessage({\n      email: config.email,\n      newScore,\n      previousScore: currentScore,\n      daysSinceEngagement,\n      slackChannel: config.slackChannel,\n      slackBotToken: config.slackBotToken,\n    });\n\n    logger.info('💬 Mensaje enviado a Slack', {\n      messageId: slackMessageId,\n      channel: config.slackChannel,\n    });\n\n    const result: DropoutPositivoResult = {\n      id: executionId,\n      contactId: config.contactId,\n      email: config.email,\n      lastEngagementDate: lastEngagement,\n      daysSinceEngagement,\n      previousScore: currentScore,\n      newScore,\n      slackMessageId,\n      processedAt: new Date().toISOString(),\n      success: true,\n    };\n\n    logger.info('✅ Dropout Positivo procesado exitosamente', result);\n    return result;\n  } catch (error) {\n    logger.error('❌ Error en procesamiento Dropout Positivo', {\n      error: error instanceof Error ? error.message : String(error),\n      stack: error instanceof Error ? error.stack : undefined,\n      contactId: config.contactId,\n      executionId,\n    });\n\n    throw error;\n  }\n};\n\n/**\n * Obtener información del contact desde HubSpot\n */\nasync function getHubSpotContact(\n  contactId: string,\n  apiKey: string,\n  retries = 3\n): Promise<any> {\n  const url = `https://api.hubapi.com/crm/v3/objects/contacts/${contactId}`;\n\n  for (let attempt = 1; attempt <= retries; attempt++) {\n    try {\n      const response = await axios.get(url, {\n        headers: {\n          Authorization: `Bearer ${apiKey}`,\n          'Content-Type': 'application/json',\n        },\n        params: {\n          properties:\n            'email,lead_influence_score,last_engagement_date,firstname,lastname',\n        },\n      });\n\n      return response.data.properties;\n    } catch (error) {\n      if (attempt === retries) {\n        logger.error(\n          '❌ Error obteniendo contact de HubSpot después de todos los reintentos',\n          {\n            contactId,\n            attempt,\n            error: error instanceof Error ? error.message : String(error),\n          }\n        );\n        throw error;\n      }\n\n      const delay = Math.pow(2, attempt) * 1000; // Backoff exponencial\n      logger.warn(`Reintento ${attempt}/${retries} en ${delay}ms`, {\n        contactId,\n        error: error instanceof Error ? error.message : String(error),\n      });\n\n      await new Promise((resolve) => setTimeout(resolve, delay));\n    }\n  }\n\n  throw new Error('Error inesperado en getHubSpotContact');\n}\n\n/**\n * Actualizar score del contact en HubSpot\n */\nasync function updateHubSpotContactScore(\n  contactId: string,\n  newScore: number,\n  apiKey: string,\n  retries = 3\n): Promise<void> {\n  const url = `https://api.hubapi.com/crm/v3/objects/contacts/${contactId}`;\n\n  for (let attempt = 1; attempt <= retries; attempt++) {\n    try {\n      await axios.patch(\n        url,\n        {\n          properties: {\n            lead_influence_score: newScore.toString(),\n            last_dropout_boost_date: new Date().toISOString(),\n            dropout_boost_applied: 'true',\n          },\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${apiKey}`,\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n\n      return;\n    } catch (error) {\n      if (attempt === retries) {\n        logger.error(\n          '❌ Error actualizando contact en HubSpot después de todos los reintentos',\n          {\n            contactId,\n            newScore,\n            attempt,\n            error: error instanceof Error ? error.message : String(error),\n          }\n        );\n        throw error;\n      }\n\n      const delay = Math.pow(2, attempt) * 1000;\n      logger.warn(\n        `Reintento actualización HubSpot ${attempt}/${retries} en ${delay}ms`,\n        {\n          contactId,\n          newScore,\n          error: error instanceof Error ? error.message : String(error),\n        }\n      );\n\n      await new Promise((resolve) => setTimeout(resolve, delay));\n    }\n  }\n}\n\n/**\n * Enviar mensaje de dropout positivo a Slack\n */\nasync function sendDropoutSlackMessage(\n  config: {\n    email: string;\n    newScore: number;\n    previousScore: number;\n    daysSinceEngagement: number;\n    slackChannel: string;\n    slackBotToken: string;\n  },\n  retries = 3\n): Promise<string> {\n  const message = {\n    channel: config.slackChannel,\n    blocks: [\n      {\n        type: 'section',\n        text: {\n          type: 'mrkdwn',\n          text:\n            `💫 *Dropout Emocional Positivo*\\n\\n` +\n            `*Usuario:* ${config.email}\\n` +\n            `*Score:* ${config.previousScore} → *${config.newScore}* (+${config.newScore - config.previousScore})\\n` +\n            `*Días sin engagement:* ${config.daysSinceEngagement}\\n` +\n            `*Acción:* Reengagement aplicado\\n\\n` +\n            `🚀 Este usuario ha sido reactivado con un boost de score para fomentar el re-engagement.`,\n        },\n      },\n      {\n        type: 'context',\n        elements: [\n          {\n            type: 'mrkdwn',\n            text: `⏰ ${new Date().toLocaleString('es-ES', { timeZone: 'Europe/Madrid' })} CET`,\n          },\n        ],\n      },\n    ],\n  };\n\n  for (let attempt = 1; attempt <= retries; attempt++) {\n    try {\n      const response = await axios.post(\n        'https://slack.com/api/chat.postMessage',\n        message,\n        {\n          headers: {\n            Authorization: `Bearer ${config.slackBotToken}`,\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n\n      if (!response.data.ok) {\n        throw new Error(`Slack API error: ${response.data.error}`);\n      }\n\n      return response.data.ts;\n    } catch (error) {\n      if (attempt === retries) {\n        logger.error(\n          '❌ Error enviando mensaje a Slack después de todos los reintentos',\n          {\n            channel: config.slackChannel,\n            attempt,\n            error: error instanceof Error ? error.message : String(error),\n          }\n        );\n        throw error;\n      }\n\n      const delay = Math.pow(2, attempt) * 1000;\n      logger.warn(`Reintento Slack ${attempt}/${retries} en ${delay}ms`, {\n        channel: config.slackChannel,\n        error: error instanceof Error ? error.message : String(error),\n      });\n\n      await new Promise((resolve) => setTimeout(resolve, delay));\n    }\n  }\n\n  throw new Error('Error inesperado en sendDropoutSlackMessage');\n}\n\n/**\n * Calcular días desde el último engagement\n */\nfunction calculateDaysSinceEngagement(lastEngagementDate?: string): number {\n  if (!lastEngagementDate) {\n    return 999; // Si no tiene fecha, asumimos muchos días\n  }\n\n  const lastDate = new Date(lastEngagementDate);\n  const now = new Date();\n  const diffTime = Math.abs(now.getTime() - lastDate.getTime());\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n  return diffDays;\n}\n"],"version":3}