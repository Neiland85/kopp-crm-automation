d858cdc4daac1b93d7cf20ab01cb1104
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const cors_1 = __importDefault(require("cors"));
const swagger_1 = require("./config/swagger");
const health_1 = __importDefault(require("./routes/health"));
const slack_1 = __importDefault(require("./routes/slack"));
const hubspot_1 = __importDefault(require("./routes/hubspot"));
const zapier_1 = __importDefault(require("./routes/zapier"));
const app = (0, express_1.default)();
const PORT = process.env.PORT || 3000;
// Middleware b√°sico
app.use((0, cors_1.default)());
app.use(express_1.default.json({ limit: '10mb' }));
app.use(express_1.default.urlencoded({ extended: true }));
// Middleware de logging simple
app.use((req, res, next) => {
    const timestamp = new Date().toISOString();
    console.log(`${timestamp} - ${req.method} ${req.path}`);
    next();
});
/**
 * @swagger
 * /:
 *   get:
 *     tags: [Health]
 *     summary: Endpoint ra√≠z de la API
 *     description: |
 *       Endpoint de bienvenida que proporciona informaci√≥n b√°sica sobre la API de Kopp Stadium CRM.
 *
 *       **Informaci√≥n incluida:**
 *       - üéØ Nombre y versi√≥n de la API
 *       - üìö Enlaces a documentaci√≥n
 *       - üîó Endpoints disponibles
 *       - üìä Estado general del sistema
 *       - üöÄ Informaci√≥n de despliegue
 *     responses:
 *       200:
 *         description: Informaci√≥n de bienvenida de la API
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 message:
 *                   type: string
 *                   description: Mensaje de bienvenida
 *                 api:
 *                   type: object
 *                   properties:
 *                     name: { type: string }
 *                     version: { type: string }
 *                     description: { type: string }
 *                 documentation:
 *                   type: object
 *                   properties:
 *                     swagger_ui: { type: string }
 *                     openapi_json: { type: string }
 *                     openapi_yaml: { type: string }
 *                 endpoints:
 *                   type: object
 *                   properties:
 *                     health: { type: array, items: { type: string } }
 *                     slack: { type: array, items: { type: string } }
 *                     hubspot: { type: array, items: { type: string } }
 *                     zapier: { type: array, items: { type: string } }
 *                 integrations:
 *                   type: object
 *                   properties:
 *                     slack: { type: string }
 *                     hubspot: { type: string }
 *                     zapier: { type: string }
 *                     google_sheets: { type: string }
 *                 features:
 *                   type: array
 *                   items: { type: string }
 *                 timestamp:
 *                   type: string
 *                   format: date-time
 *             example:
 *               message: "üèüÔ∏è Bienvenido a Kopp Stadium CRM API"
 *               api:
 *                 name: "Kopp Stadium CRM API"
 *                 version: "1.0.0"
 *                 description: "Automatizaci√≥n estrat√©gica de CRM con integraci√≥n completa"
 *               documentation:
 *                 swagger_ui: "/api-docs"
 *                 openapi_json: "/api-docs.json"
 *                 openapi_yaml: "/api-docs.yaml"
 *               endpoints:
 *                 health: ["/health", "/health/detailed", "/version"]
 *                 slack: ["/slack/notify", "/slack/channels", "/slack/webhook"]
 *                 hubspot: ["/hubspot/contacts", "/hubspot/contacts/{id}/score"]
 *                 zapier: ["/zapier/webhook/lead-scoring", "/zapier/webhook/form-submission", "/zapier/status"]
 *               integrations:
 *                 slack: "Notificaciones y alertas en tiempo real"
 *                 hubspot: "Gesti√≥n de leads y contactos CRM"
 *                 zapier: "Automatizaci√≥n de workflows"
 *                 google_sheets: "Lead scoring y an√°lisis"
 *               features:
 *                 - "üîí Seguridad implementada con validaci√≥n de tokens"
 *                 - "‚ö° Ultra cost-optimized CI/CD"
 *                 - "üìä Lead scoring autom√°tico"
 *                 - "üîî Notificaciones inteligentes"
 *                 - "üß™ Testing completo y coverage"
 *                 - "üìã ADRs implementados"
 *                 - "üéØ Rate limiting y validaciones"
 *               timestamp: "2024-06-29T18:00:00.000Z"
 */
app.get('/', (req, res) => {
    res.json({
        message: 'üèüÔ∏è Bienvenido a Kopp Stadium CRM API',
        api: {
            name: 'Kopp Stadium CRM API',
            version: '1.0.0',
            description: 'Automatizaci√≥n estrat√©gica de CRM con integraci√≥n completa',
        },
        documentation: {
            swagger_ui: '/api-docs',
            openapi_json: '/api-docs.json',
            openapi_yaml: '/api-docs.yaml',
        },
        endpoints: {
            health: ['/health', '/health/detailed', '/version'],
            slack: ['/slack/notify', '/slack/channels', '/slack/webhook'],
            hubspot: ['/hubspot/contacts', '/hubspot/contacts/{id}/score'],
            zapier: [
                '/zapier/webhook/lead-scoring',
                '/zapier/webhook/form-submission',
                '/zapier/status',
            ],
        },
        integrations: {
            slack: 'Notificaciones y alertas en tiempo real',
            hubspot: 'Gesti√≥n de leads y contactos CRM',
            zapier: 'Automatizaci√≥n de workflows',
            google_sheets: 'Lead scoring y an√°lisis',
        },
        features: [
            'üîí Seguridad implementada con validaci√≥n de tokens',
            '‚ö° Ultra cost-optimized CI/CD',
            'üìä Lead scoring autom√°tico',
            'üîî Notificaciones inteligentes',
            'üß™ Testing completo y coverage',
            'üìã ADRs implementados',
            'üéØ Rate limiting y validaciones',
        ],
        timestamp: new Date().toISOString(),
    });
});
// Configurar rutas
app.use('/', health_1.default);
app.use('/slack', slack_1.default);
app.use('/hubspot', hubspot_1.default);
app.use('/zapier', zapier_1.default);
// Configurar Swagger
(0, swagger_1.setupSwagger)(app);
// Middleware de manejo de errores
// eslint-disable-next-line @typescript-eslint/no-unused-vars
app.use((err, req, res, 
// eslint-disable-next-line @typescript-eslint/no-unused-vars
_next) => {
    console.error('Error:', err);
    res.status(500).json({
        error: 'INTERNAL_SERVER_ERROR',
        message: 'Error interno del servidor',
        timestamp: new Date().toISOString(),
    });
});
// Middleware para rutas no encontradas
app.use('*', (req, res) => {
    res.status(404).json({
        error: 'ENDPOINT_NOT_FOUND',
        message: `Endpoint ${req.method} ${req.originalUrl} no encontrado`,
        available_endpoints: {
            documentation: '/api-docs',
            health: '/health',
            slack: '/slack/*',
            hubspot: '/hubspot/*',
            zapier: '/zapier/*',
        },
        timestamp: new Date().toISOString(),
    });
});
// Iniciar servidor solo si no estamos en entorno de testing
if (process.env.NODE_ENV !== 'test') {
    app.listen(PORT, () => {
        console.log('üöÄ Kopp Stadium CRM API iniciada exitosamente!');
        console.log(`üìç Servidor ejecut√°ndose en http://localhost:${PORT}`);
        console.log(`üìö Documentaci√≥n Swagger: http://localhost:${PORT}/api-docs`);
        console.log(`üîç Health Check: http://localhost:${PORT}/health`);
        console.log(`‚ö° Environment: ${process.env.NODE_ENV || 'development'}`);
        console.log('');
        console.log('üéØ Endpoints principales:');
        console.log('   - GET  /health - Verificaci√≥n de salud');
        console.log('   - POST /slack/notify - Notificaciones Slack');
        console.log('   - POST /hubspot/contacts - Crear contactos');
        console.log('   - POST /zapier/webhook/lead-scoring - Webhook scoring');
        console.log('   - POST /zapier/webhook/form-submission - Webhook formularios');
        console.log('');
        console.log('üîó Integraciones activas:');
        console.log('   - üì¢ Slack API');
        console.log('   - üìä HubSpot CRM');
        console.log('   - ‚ö° Zapier Webhooks');
        console.log('   - üìà Google Sheets');
        console.log('');
        console.log('‚ú® ¬°API lista para automatizar Kopp Stadium CRM!');
    });
}
exports.default = app;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,