{"file":"/Users/estudio/Projects/GitHub/MICROSERVICIOS/kopp-stadium-crm_slack-hubspot-zappier-notion/kopp-crm-automation/src/config/ConfigManager.ts","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uCAAyB;AACzB,2CAA6B;AAsB7B;;GAEG;AAEH,MAAa,aAAa;IAIxB;QACE,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,aAAa,CAAC;QACzD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACtC,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAEO,iBAAiB;QACvB,IAAI,CAAC;YACH,4BAA4B;YAC5B,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;YAClE,IAAI,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,CAAC;gBAC9B,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC,CAAC;gBACnE,IAAI,CAAC,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,UAAU,EAAE,CAAC;YAClD,CAAC;YAED,8CAA8C;YAC9C,uFAAuF;YACvF,gDAAgD;YAEhD,OAAO,CAAC,GAAG,CAAC,0CAA0C,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;QAC5E,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;YACxD,qCAAqC;QACvC,CAAC;IACH,CAAC;IAEO,gBAAgB;QACtB,OAAO;YACL,GAAG,EAAE;gBACH,IAAI,EAAE,qBAAqB;gBAC3B,OAAO,EAAE,OAAO;gBAChB,WAAW,EAAE,IAAI,CAAC,WAAW;gBAC7B,IAAI,EAAE,IAAI;aACX;YACD,OAAO,EAAE;gBACP,KAAK,EAAE,MAAM;aACd;SACF,CAAC;IACJ,CAAC;IAED,GAAG,CAAC,GAAW,EAAE,YAAkB;QACjC,MAAM,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC5B,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;QAExB,KAAK,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC;YACrB,IAAI,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,CAAC,IAAI,KAAK,EAAE,CAAC;gBACrD,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACnB,CAAC;iBAAM,CAAC;gBACN,OAAO,YAAY,CAAC;YACtB,CAAC;QACH,CAAC;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAC,WAAW,KAAK,YAAY,CAAC;IAC3C,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC,WAAW,KAAK,aAAa,CAAC;IAC5C,CAAC;CACF;AAtED,sCAsEC","names":[],"sources":["/Users/estudio/Projects/GitHub/MICROSERVICIOS/kopp-stadium-crm_slack-hubspot-zappier-notion/kopp-crm-automation/src/config/ConfigManager.ts"],"sourcesContent":["import * as fs from 'fs';\nimport * as path from 'path';\n\n/**\n * Interfaces para configuraci√≥n tipada\n */\ninterface AppConfig {\n  name: string;\n  version: string;\n  environment: string;\n  port: number;\n}\n\ninterface LoggingConfig {\n  level: 'debug' | 'info' | 'warn' | 'error';\n}\n\ninterface Config {\n  app: AppConfig;\n  logging: LoggingConfig;\n  [key: string]: any;\n}\n\n/**\n * Gestor de configuraci√≥n para Kopp CRM Automation\n */\n\nexport class ConfigManager {\n  private config: Config;\n  private environment: string;\n\n  constructor() {\n    this.environment = process.env.NODE_ENV || 'development';\n    this.config = this.getDefaultConfig();\n    this.loadConfiguration();\n  }\n\n  private loadConfiguration(): void {\n    try {\n      // Cargar configuraci√≥n base\n      const configPath = path.join(process.cwd(), 'config', 'app.json');\n      if (fs.existsSync(configPath)) {\n        const baseConfig = JSON.parse(fs.readFileSync(configPath, 'utf8'));\n        this.config = { ...this.config, ...baseConfig };\n      }\n\n      // Cargar configuraci√≥n espec√≠fica del entorno\n      // const envConfigPath = path.join(process.cwd(), 'config', `${this.environment}.yml`);\n      // TODO: Implementar parser YAML si es necesario\n\n      console.log(`üìã Configuraci√≥n cargada para entorno: ${this.environment}`);\n    } catch (error) {\n      console.error('‚ùå Error cargando configuraci√≥n:', error);\n      // Mantener configuraci√≥n por defecto\n    }\n  }\n\n  private getDefaultConfig(): Config {\n    return {\n      app: {\n        name: 'Kopp CRM Automation',\n        version: '1.0.0',\n        environment: this.environment,\n        port: 3000,\n      },\n      logging: {\n        level: 'info',\n      },\n    };\n  }\n\n  get(key: string, defaultValue?: any): any {\n    const keys = key.split('.');\n    let value = this.config;\n\n    for (const k of keys) {\n      if (value && typeof value === 'object' && k in value) {\n        value = value[k];\n      } else {\n        return defaultValue;\n      }\n    }\n\n    return value;\n  }\n\n  getEnvironment(): string {\n    return this.environment;\n  }\n\n  isProduction(): boolean {\n    return this.environment === 'production';\n  }\n\n  isDevelopment(): boolean {\n    return this.environment === 'development';\n  }\n}\n"],"version":3}