{"file":"/Users/estudio/Projects/GitHub/MICROSERVICIOS/kopp-stadium-crm_slack-hubspot-zappier-notion/kopp-crm-automation/tests/zaps/recompensas-escasez/recompensas-escasez.test.ts","mappings":";;AAAA,2CAAqD;AAErD;;;;GAIG;AAEH,IAAA,kBAAQ,EAAC,yBAAyB,EAAE,GAAG,EAAE;IACvC,IAAA,YAAE,EAAC,oCAAoC,EAAE,GAAG,EAAE;QAC5C,IAAA,gBAAM,EAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC;IAEH,IAAA,YAAE,EAAC,kCAAkC,EAAE,GAAG,EAAE;QAC1C,MAAM,UAAU,GAAG;YACjB,aAAa,EAAE,UAAU;YACzB,aAAa,EAAE,YAAY;YAC3B,YAAY,EAAE,eAAe;YAC7B,cAAc,EAAE,EAAE;YAClB,SAAS,EAAE,IAAI;SAChB,CAAC;QAEF,IAAA,gBAAM,EAAC,UAAU,CAAC,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;QACnD,IAAA,gBAAM,EAAC,UAAU,CAAC,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;QACnD,IAAA,gBAAM,EAAC,UAAU,CAAC,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;QAClD,IAAA,gBAAM,EAAC,UAAU,CAAC,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;QACpD,IAAA,gBAAM,EAAC,UAAU,CAAC,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,IAAA,YAAE,EAAC,wCAAwC,EAAE,GAAG,EAAE;QAChD,MAAM,eAAe,GAAG;YACtB,SAAS,EAAE,UAAU;YACrB,WAAW,EAAE,cAAc;YAC3B,cAAc,EAAE,EAAE;YAClB,aAAa,EAAE,EAAE;YACjB,YAAY,EAAE,MAAM;YACpB,SAAS,EAAE,0BAA0B;SACtC,CAAC;QAEF,IAAA,gBAAM,EAAC,eAAe,CAAC,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;QACpD,IAAA,gBAAM,EAAC,eAAe,CAAC,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QACtD,IAAA,gBAAM,EAAC,eAAe,CAAC,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;QACzD,IAAA,gBAAM,EAAC,eAAe,CAAC,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;QACvD,IAAA,gBAAM,EAAC,OAAO,eAAe,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC/D,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/estudio/Projects/GitHub/MICROSERVICIOS/kopp-stadium-crm_slack-hubspot-zappier-notion/kopp-crm-automation/tests/zaps/recompensas-escasez/recompensas-escasez.test.ts"],"sourcesContent":["import { describe, it, expect } from '@jest/globals';\n\n/**\n * ðŸ§ª Tests bÃ¡sicos para Recompensas por Escasez\n * \n * Tests mÃ­nimos mientras se desarrolla el handler completo\n */\n\ndescribe('Recompensas por Escasez', () => {\n  it('should pass basic placeholder test', () => {\n    expect(true).toBe(true);\n  });\n\n  it('should validate config structure', () => {\n    const mockConfig = {\n      hubspotApiKey: 'test-key',\n      slackBotToken: 'test-token',\n      slackChannel: '#test-channel',\n      stockThreshold: 20,\n      isEnabled: true,\n    };\n\n    expect(mockConfig).toHaveProperty('hubspotApiKey');\n    expect(mockConfig).toHaveProperty('slackBotToken');\n    expect(mockConfig).toHaveProperty('slackChannel');\n    expect(mockConfig).toHaveProperty('stockThreshold');\n    expect(mockConfig).toHaveProperty('isEnabled');\n  });\n\n  it('should validate trigger data structure', () => {\n    const mockTriggerData = {\n      productId: 'PROD-001',\n      productName: 'Test Product',\n      stockRemaining: 15,\n      previousStock: 25,\n      urgencyLevel: 'high',\n      timestamp: '2025-01-01T00:00:00.000Z',\n    };\n\n    expect(mockTriggerData).toHaveProperty('productId');\n    expect(mockTriggerData).toHaveProperty('productName');\n    expect(mockTriggerData).toHaveProperty('stockRemaining');\n    expect(mockTriggerData).toHaveProperty('urgencyLevel');\n    expect(typeof mockTriggerData.stockRemaining).toBe('number');\n  });\n});\n"],"version":3}