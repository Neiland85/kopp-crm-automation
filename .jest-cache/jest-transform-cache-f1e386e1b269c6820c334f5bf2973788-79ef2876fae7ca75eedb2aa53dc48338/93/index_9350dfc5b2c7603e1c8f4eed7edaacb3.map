{"file":"/Users/estudio/Projects/GitHub/MICROSERVICIOS/kopp-stadium-crm_slack-hubspot-zappier-notion/kopp-crm-automation/src/zapier/index.ts","mappings":"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","names":[],"sources":["/Users/estudio/Projects/GitHub/MICROSERVICIOS/kopp-stadium-crm_slack-hubspot-zappier-notion/kopp-crm-automation/src/zapier/index.ts"],"sourcesContent":["import { version as platformVersion } from 'zapier-platform-core';\nimport { version } from '../../package.json';\n\n// Importar triggers y creates\nimport newFormSubmissionTrigger from './triggers/newFormSubmission';\nimport pageViewTrigger from './triggers/pageView';\nimport updatedContactPropertyTrigger from './triggers/updatedContactProperty';\nimport newGoogleSheetsLeadScoringTrigger from './triggers/newGoogleSheetsLeadScoring';\nimport hubspotContactCreate from './creates/hubspotContact';\nimport slackNotificationCreate from './creates/slackNotification';\nimport updateScoreTimestampCreate from './creates/updateScoreTimestamp';\nimport sendScoringNotificationCreate from './creates/sendScoringNotification';\nimport updateHubSpotExternalScoreCreate from './creates/updateHubSpotExternalScore';\nimport sendHighScoreSlackAlertCreate from './creates/sendHighScoreSlackAlert';\n\n// Configuración principal de la app Zapier\nconst App = {\n  // Versión de la plataforma Zapier\n  version,\n  platformVersion,\n\n  // Configuración de autenticación\n  authentication: {\n    type: 'custom',\n    fields: [\n      {\n        computed: false,\n        key: 'hubspot_api_key',\n        required: true,\n        label: 'HubSpot API Key',\n        type: 'string',\n        helpText: 'Your HubSpot private app access token',\n      },\n      {\n        computed: false,\n        key: 'slack_webhook_url',\n        required: true,\n        label: 'Slack Webhook URL',\n        type: 'string',\n        helpText: 'Your Slack incoming webhook URL for #automations-alerts',\n      },\n      {\n        computed: false,\n        key: 'google_access_token',\n        required: false,\n        label: 'Google Sheets Access Token',\n        type: 'string',\n        helpText: 'Your Google OAuth2 access token for Google Sheets API',\n      },\n      {\n        computed: false,\n        key: 'google_spreadsheet_id',\n        required: false,\n        label: 'Google Spreadsheet ID',\n        type: 'string',\n        helpText:\n          'The ID of your Google Spreadsheet containing the Lead Scoring sheet',\n      },\n    ],\n    test: {\n      url: 'https://api.hubapi.com/crm/v3/objects/contacts?limit=1',\n      method: 'GET',\n      headers: {\n        Authorization: 'Bearer {{bundle.authData.hubspot_api_key}}',\n      },\n    },\n  },\n\n  // Triggers disponibles\n  triggers: {\n    [newFormSubmissionTrigger.key]: newFormSubmissionTrigger,\n    [pageViewTrigger.key]: pageViewTrigger,\n    [updatedContactPropertyTrigger.key]: updatedContactPropertyTrigger,\n    [newGoogleSheetsLeadScoringTrigger.key]: newGoogleSheetsLeadScoringTrigger,\n  },\n\n  // Creates (acciones) disponibles\n  creates: {\n    [hubspotContactCreate.key]: hubspotContactCreate,\n    [slackNotificationCreate.key]: slackNotificationCreate,\n    [updateScoreTimestampCreate.key]: updateScoreTimestampCreate,\n    [sendScoringNotificationCreate.key]: sendScoringNotificationCreate,\n    [updateHubSpotExternalScoreCreate.key]: updateHubSpotExternalScoreCreate,\n    [sendHighScoreSlackAlertCreate.key]: sendHighScoreSlackAlertCreate,\n  },\n\n  // Configuración de la app\n  beforeRequest: [\n    // Middleware para agregar headers comunes\n    (request: any, z: any, bundle: any) => {\n      if (request.url.includes('hubapi.com')) {\n        request.headers = request.headers || {};\n        request.headers['Authorization'] =\n          `Bearer ${bundle.authData.hubspot_api_key}`;\n        request.headers['Content-Type'] = 'application/json';\n      }\n      return request;\n    },\n  ],\n\n  afterResponse: [\n    // Middleware para manejar errores HTTP\n    (response: any, z: any) => {\n      if (response.status >= 400) {\n        const error = {\n          status: response.status,\n          message: response.content || 'Unknown error',\n          url: response.request.url,\n        };\n\n        // Log del error\n        z.console.error('HTTP Error:', error);\n\n        // Reintentos para errores 5xx\n        if (response.status >= 500) {\n          throw new z.errors.RefreshAuthError('Server error, will retry');\n        }\n\n        throw new z.errors.Error(`HTTP ${response.status}: ${error.message}`);\n      }\n      return response;\n    },\n  ],\n};\n\nexport default App;\n"],"version":3}