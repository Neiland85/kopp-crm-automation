{"file":"/Users/estudio/Projects/GitHub/MICROSERVICIOS/kopp-stadium-crm_slack-hubspot-zappier-notion/kopp-crm-automation/tests/zaps/dropout-positivo/dropout-positivo.test.ts","mappings":"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","names":[],"sources":["/Users/estudio/Projects/GitHub/MICROSERVICIOS/kopp-stadium-crm_slack-hubspot-zappier-notion/kopp-crm-automation/tests/zaps/dropout-positivo/dropout-positivo.test.ts"],"sourcesContent":["/**\n * 🧪 Tests para Dropout Positivo - Zapier CLI Integration\n *\n * Tests unitarios con Jest\n */\n\nimport {\n  dropoutPositivoHandler,\n  DropoutPositivoConfig,\n} from '../../../src/zaps/dropout-positivo/handler';\n\n// Mock del handler con jest\njest.mock('../../../src/zaps/dropout-positivo/handler');\n\ndescribe('💫 Dropout Positivo Integration Tests', () => {\n  const mockDropoutPositivoHandler =\n    dropoutPositivoHandler as jest.MockedFunction<\n      typeof dropoutPositivoHandler\n    >;\n\n  const mockConfig: DropoutPositivoConfig = {\n    contactId: '12345',\n    email: 'usuario@example.com',\n    hubspotApiKey: 'test-hubspot-key',\n    slackBotToken: 'test-slack-token',\n    slackChannel: '#auditoria-sagrada',\n    scoreBoost: 30,\n    thresholdDays: 7,\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('✅ Casos de Éxito', () => {\n    it('debe procesar correctamente un contact con dropout > 7 días', async () => {\n      // Arrange\n      const expectedResult = {\n        id: 'dropout-123-test',\n        success: true,\n        contactId: mockConfig.contactId,\n        email: mockConfig.email,\n        previousScore: 35,\n        newScore: 65,\n        daysSinceEngagement: 10,\n        slackMessageId: 'slack-msg-123',\n        processedAt: new Date().toISOString(),\n      };\n\n      mockDropoutPositivoHandler.mockResolvedValue(expectedResult);\n\n      // Act\n      const result = await dropoutPositivoHandler(mockConfig);\n\n      // Assert\n      expect(result).toEqual(expectedResult);\n      expect(result.success).toBe(true);\n      expect(result.newScore).toBe(result.previousScore + 30);\n      expect(result.daysSinceEngagement).toBeGreaterThan(7);\n      expect(mockDropoutPositivoHandler).toHaveBeenCalledWith(mockConfig);\n    });\n\n    it('debe manejar contactos con score bajo inicial', async () => {\n      // Arrange\n      const configWithLowScore = {\n        ...mockConfig,\n        contactId: '67890',\n        email: 'novato@example.com',\n      };\n      const expectedResult = {\n        id: 'dropout-456-test',\n        success: true,\n        contactId: configWithLowScore.contactId,\n        email: configWithLowScore.email,\n        previousScore: 5,\n        newScore: 35,\n        daysSinceEngagement: 10,\n        slackMessageId: 'slack-msg-456',\n        processedAt: new Date().toISOString(),\n      };\n\n      mockDropoutPositivoHandler.mockResolvedValue(expectedResult);\n\n      // Act\n      const result = await dropoutPositivoHandler(configWithLowScore);\n\n      // Assert\n      expect(result.success).toBe(true);\n      expect(result.newScore).toBe(35);\n      expect(result.daysSinceEngagement).toBeCloseTo(10, 0);\n    });\n  });\n\n  describe('❌ Manejo de Errores', () => {\n    it('debe manejar errores de HubSpot API', async () => {\n      // Arrange\n      const configWithError = { ...mockConfig, contactId: '99999' };\n      const error = new Error('HubSpot API error');\n\n      mockDropoutPositivoHandler.mockRejectedValue(error);\n\n      // Act & Assert\n      await expect(dropoutPositivoHandler(configWithError)).rejects.toThrow(\n        'HubSpot API error'\n      );\n      expect(mockDropoutPositivoHandler).toHaveBeenCalledWith(configWithError);\n    });\n\n    it('debe rechazar contactos sin dropout (< 7 días)', async () => {\n      // Arrange\n      const configWithRecentEngagement = { ...mockConfig, contactId: '55555' };\n      const error = new Error(\n        'Contact does not qualify for dropout processing'\n      );\n\n      mockDropoutPositivoHandler.mockRejectedValue(error);\n\n      // Act & Assert\n      await expect(\n        dropoutPositivoHandler(configWithRecentEngagement)\n      ).rejects.toThrow('Contact does not qualify for dropout processing');\n    });\n  });\n\n  describe('⚡ Performance', () => {\n    it('debe completar el procesamiento en tiempo razonable', async () => {\n      // Arrange\n      const configForPerformance = {\n        ...mockConfig,\n        contactId: '33333',\n        email: 'performance@example.com',\n      };\n      const expectedResult = {\n        id: 'dropout-789-test',\n        success: true,\n        contactId: configForPerformance.contactId,\n        email: configForPerformance.email,\n        previousScore: 45,\n        newScore: 75,\n        daysSinceEngagement: 8,\n        slackMessageId: 'slack-msg-789',\n        processedAt: new Date().toISOString(),\n      };\n\n      mockDropoutPositivoHandler.mockResolvedValue(expectedResult);\n\n      // Act\n      const startTime = Date.now();\n      const result = await dropoutPositivoHandler(configForPerformance);\n      const executionTime = Date.now() - startTime;\n\n      // Assert\n      expect(executionTime).toBeLessThan(1000); // Menos de 1 segundo para mock\n      expect(result.success).toBe(true);\n    });\n  });\n});\n"],"version":3}