{"file":"/Users/estudio/Projects/GitHub/MICROSERVICIOS/kopp-stadium-crm_slack-hubspot-zappier-notion/kopp-crm-automation/src/__tests__/cookies-policy.test.ts","mappings":"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","names":[],"sources":["/Users/estudio/Projects/GitHub/MICROSERVICIOS/kopp-stadium-crm_slack-hubspot-zappier-notion/kopp-crm-automation/src/__tests__/cookies-policy.test.ts"],"sourcesContent":["/**\n * Tests para Cookie Policy Manager\n * Valida cumplimiento con estándares AEPD y RGPD\n */\n\nimport { CookiesPolicyManager } from '../policies/cookies-policy';\n\ndescribe('CookiesPolicyManager', () => {\n  describe('Estructura de Política', () => {\n    it('debe tener todas las categorías requeridas', () => {\n      const policy = CookiesPolicyManager.getCookiesPolicy();\n      \n      expect(policy.categories).toHaveLength(5);\n      \n      const categoryIds = policy.categories.map(cat => cat.id);\n      expect(categoryIds).toContain('essential');\n      expect(categoryIds).toContain('analytics');\n      expect(categoryIds).toContain('marketing');\n      expect(categoryIds).toContain('functional');\n      expect(categoryIds).toContain('personalization');\n    });\n\n    it('debe incluir información legal completa', () => {\n      const policy = CookiesPolicyManager.getCookiesPolicy();\n      \n      expect(policy.legalFramework).toBeDefined();\n      expect(policy.legalFramework.rgpd).toContain('Reglamento General de Protección de Datos');\n      expect(policy.legalFramework.lssi).toContain('LSSI');\n      expect(policy.legalFramework.aepd).toContain('AEPD');\n      \n      expect(policy.userRights).toBeDefined();\n      expect(policy.contactInfo).toBeDefined();\n    });\n\n    it('debe tener versión y fecha de actualización', () => {\n      const policy = CookiesPolicyManager.getCookiesPolicy();\n      \n      expect(policy.version).toBeDefined();\n      expect(policy.lastUpdated).toBeDefined();\n      expect(policy.version).toMatch(/^\\d+\\.\\d+\\.\\d+$/);\n    });\n  });\n\n  describe('Categorías de Cookies', () => {\n    it('debe tener exactamente una categoría esencial', () => {\n      const categories = CookiesPolicyManager.COOKIE_CATEGORIES;\n      const essentialCategories = categories.filter(cat => cat.essential);\n      \n      expect(essentialCategories).toHaveLength(1);\n      expect(essentialCategories[0].id).toBe('essential');\n    });\n\n    it('debe incluir información completa para cada categoría', () => {\n      const categories = CookiesPolicyManager.COOKIE_CATEGORIES;\n      \n      categories.forEach(category => {\n        expect(category.id).toBeDefined();\n        expect(category.name).toBeDefined();\n        expect(category.description).toBeDefined();\n        expect(category.purpose).toBeDefined();\n        expect(category.legalBasis).toBeDefined();\n        expect(category.dataTransfer).toBeDefined();\n        expect(category.retention).toBeDefined();\n        expect(category.processors).toBeDefined();\n        expect(category.cookies).toBeDefined();\n        expect(Array.isArray(category.cookies)).toBe(true);\n      });\n    });\n\n    it('debe incluir cookies con información técnica completa', () => {\n      const categories = CookiesPolicyManager.COOKIE_CATEGORIES;\n      \n      categories.forEach(category => {\n        category.cookies.forEach(cookie => {\n          expect(cookie.name).toBeDefined();\n          expect(cookie.domain).toBeDefined();\n          expect(cookie.purpose).toBeDefined();\n          expect(cookie.duration).toBeDefined();\n          expect(cookie.type).toMatch(/^(session|persistent)$/);\n          expect(typeof cookie.secure).toBe('boolean');\n          expect(typeof cookie.httpOnly).toBe('boolean');\n          expect(cookie.sameSite).toMatch(/^(strict|lax|none)$/);\n          expect(cookie.processor).toBeDefined();\n          expect(cookie.country).toBeDefined();\n          expect(typeof cookie.personalData).toBe('boolean');\n        });\n      });\n    });\n  });\n\n  describe('Validación de Consentimiento', () => {\n    it('debe validar consentimiento válido', () => {\n      const validConsent = {\n        timestamp: new Date(),\n        version: '2.0.0',\n        categories: { essential: true, analytics: false },\n        ipAddress: '192.168.1.1',\n        userAgent: 'Mozilla/5.0',\n        consentId: 'consent_123',\n        method: 'banner' as const\n      };\n\n      const isValid = CookiesPolicyManager.validateConsent(validConsent);\n      expect(isValid).toBe(true);\n    });\n\n    it('debe rechazar consentimiento inválido', () => {\n      const invalidConsent = {\n        timestamp: new Date(),\n        version: '2.0.0',\n        // Falta categories\n        ipAddress: '192.168.1.1',\n        userAgent: 'Mozilla/5.0',\n        consentId: 'consent_123',\n        method: 'banner' as const\n      };\n\n      const isValid = CookiesPolicyManager.validateConsent(invalidConsent as any);\n      expect(isValid).toBe(false);\n    });\n  });\n\n  describe('Gestión de Cookies', () => {\n    it('debe generar IDs únicos de consentimiento', () => {\n      const id1 = CookiesPolicyManager.generateConsentId();\n      const id2 = CookiesPolicyManager.generateConsentId();\n      \n      expect(id1).toBeDefined();\n      expect(id2).toBeDefined();\n      expect(id1).not.toBe(id2);\n      expect(id1).toMatch(/^consent_\\d+_[a-z0-9]+$/);\n    });\n\n    it('debe verificar permisos de cookies correctamente', () => {\n      const consent = {\n        essential: true,\n        analytics: true,\n        marketing: false,\n        functional: false,\n        personalization: false\n      };\n\n      // Cookie esencial debe estar siempre permitida\n      expect(CookiesPolicyManager.isCookieAllowed('session_id', consent)).toBe(true);\n      \n      // Cookie de analytics debe estar permitida\n      expect(CookiesPolicyManager.isCookieAllowed('_ga', consent)).toBe(true);\n      \n      // Cookie de marketing debe estar bloqueada\n      expect(CookiesPolicyManager.isCookieAllowed('_fbp', consent)).toBe(false);\n    });\n\n    it('debe obtener cookies por categoría', () => {\n      const essentialCookies = CookiesPolicyManager.getCookiesByCategory('essential');\n      const analyticsCookies = CookiesPolicyManager.getCookiesByCategory('analytics');\n      \n      expect(essentialCookies.length).toBeGreaterThan(0);\n      expect(analyticsCookies.length).toBeGreaterThan(0);\n      \n      // Verificar que son cookies de la categoría correcta\n      expect(essentialCookies.find(c => c.name === 'session_id')).toBeDefined();\n      expect(analyticsCookies.find(c => c.name === '_ga')).toBeDefined();\n    });\n  });\n\n  describe('Reporte de Cumplimiento', () => {\n    it('debe generar reporte de cumplimiento completo', () => {\n      const report = CookiesPolicyManager.generateComplianceReport();\n      \n      expect(report.timestamp).toBeDefined();\n      expect(report.version).toBeDefined();\n      expect(report.compliance).toBeDefined();\n      expect(report.compliance.rgpd).toBe(true);\n      expect(report.compliance.lssi).toBe(true);\n      expect(report.compliance.aepd).toBe(true);\n      expect(report.compliance.cookieDirective).toBe(true);\n      \n      expect(report.categoriesCount).toBe(5);\n      expect(report.totalCookies).toBeGreaterThan(0);\n      expect(report.essentialCookies).toBe(1);\n      expect(Array.isArray(report.dataTransfers)).toBe(true);\n      expect(Array.isArray(report.retentionPeriods)).toBe(true);\n    });\n\n    it('debe incluir información de transferencias internacionales', () => {\n      const report = CookiesPolicyManager.generateComplianceReport();\n      \n      expect(report.dataTransfers).toContain('Google Ireland Limited');\n      expect(report.dataTransfers).toContain('Meta Platforms Ireland');\n      expect(report.dataTransfers).toContain('Microsoft Ireland');\n      expect(report.dataTransfers).toContain('LinkedIn Ireland');\n    });\n  });\n\n  describe('Cumplimiento AEPD', () => {\n    it('debe cumplir con requisitos de información de AEPD', () => {\n      const categories = CookiesPolicyManager.COOKIE_CATEGORIES;\n      \n      categories.forEach(category => {\n        // Debe especificar finalidad clara\n        expect(category.purpose.length).toBeGreaterThan(10);\n        \n        // Debe especificar base legal\n        expect(category.legalBasis).toContain('RGPD');\n        \n        // Debe especificar período de retención\n        expect(category.retention.length).toBeGreaterThan(0);\n        \n        // Debe especificar transferencias internacionales\n        expect(category.dataTransfer.length).toBeGreaterThan(0);\n        \n        // Debe listar procesadores\n        expect(category.processors.length).toBeGreaterThan(0);\n      });\n    });\n\n    it('debe distinguir correctamente cookies esenciales y opcionales', () => {\n      const categories = CookiesPolicyManager.COOKIE_CATEGORIES;\n      \n      const essentialCategory = categories.find(cat => cat.id === 'essential');\n      const optionalCategories = categories.filter(cat => cat.id !== 'essential');\n      \n      expect(essentialCategory?.essential).toBe(true);\n      expect(essentialCategory?.legalBasis).toContain('Interés legítimo');\n      \n      optionalCategories.forEach(category => {\n        expect(category.essential).toBe(false);\n        expect(category.legalBasis).toContain('Consentimiento');\n      });\n    });\n\n    it('debe incluir información de derechos del usuario', () => {\n      const policy = CookiesPolicyManager.getCookiesPolicy();\n      \n      expect(policy.userRights.access).toBeDefined();\n      expect(policy.userRights.rectification).toBeDefined();\n      expect(policy.userRights.erasure).toBeDefined();\n      expect(policy.userRights.portability).toBeDefined();\n      expect(policy.userRights.restriction).toBeDefined();\n      expect(policy.userRights.objection).toBeDefined();\n      expect(policy.userRights.withdraw).toBeDefined();\n      expect(policy.userRights.complaint).toBeDefined();\n    });\n  });\n\n  describe('Información de Contacto', () => {\n    it('debe incluir información de contacto completa', () => {\n      const policy = CookiesPolicyManager.getCookiesPolicy();\n      \n      expect(policy.contactInfo.company).toBeDefined();\n      expect(policy.contactInfo.address).toBeDefined();\n      expect(policy.contactInfo.email).toBeDefined();\n      expect(policy.contactInfo.phone).toBeDefined();\n      expect(policy.contactInfo.dpo).toBeDefined();\n      expect(policy.contactInfo.aepd).toBeDefined();\n      \n      // Verificar formato de email\n      expect(policy.contactInfo.email).toMatch(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/);\n      expect(policy.contactInfo.dpo).toMatch(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/);\n      \n      // Verificar URL de AEPD\n      expect(policy.contactInfo.aepd).toMatch(/^https?:\\/\\//);\n    });\n  });\n});\n\ndescribe('Comparación con Estándares', () => {\n  it('debe superar estándares básicos de AEPD', () => {\n    const categories = CookiesPolicyManager.COOKIE_CATEGORIES;\n    const totalCookies = categories.reduce((sum, cat) => sum + cat.cookies.length, 0);\n    \n    // Debe tener más de 10 cookies clasificadas\n    expect(totalCookies).toBeGreaterThan(10);\n    \n    // Debe tener al menos 5 categorías\n    expect(categories.length).toBeGreaterThanOrEqual(5);\n    \n    // Debe especificar información técnica detallada\n    categories.forEach(category => {\n      category.cookies.forEach(cookie => {\n        expect(cookie.secure).toBeDefined();\n        expect(cookie.httpOnly).toBeDefined();\n        expect(cookie.sameSite).toBeDefined();\n        expect(cookie.personalData).toBeDefined();\n      });\n    });\n  });\n\n  it('debe incluir más información que implementaciones estándar', () => {\n    const policy = CookiesPolicyManager.getCookiesPolicy();\n    \n    // Debe incluir información de transferencias internacionales\n    policy.categories.forEach(category => {\n      expect(category.dataTransfer.length).toBeGreaterThan(0);\n      expect(category.processors.length).toBeGreaterThan(0);\n    });\n    \n    // Debe incluir información técnica avanzada\n    policy.categories.forEach(category => {\n      category.cookies.forEach(cookie => {\n        expect(cookie.processor).toBeDefined();\n        expect(cookie.country).toBeDefined();\n        expect(typeof cookie.personalData).toBe('boolean');\n      });\n    });\n  });\n});\n"],"version":3}